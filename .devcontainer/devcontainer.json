{
    "name": "telconova-workorder-service",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspace",
    "features": {
        "ghcr.io/azure/azure-dev/azd:latest": {},
        "docker-in-docker": {
            "version": "latest",
            "moby": true
        }
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-azuretools.azure-dev",
                "vscjava.vscode-java-pack",
                "vscjava.vscode-spring-initializr",
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg",
                "github.copilot",
                "github.copilot-chat"
            ],
            "settings": {
                "sqltools.connections": [
                    {
                        "name": "Container database",
                        "driver": "PostgreSQL",
                        "previewLimit": 50,
                        "server": "localhost",
                        "port": 5432,
                        "database": "telconova",
                        "username": "postgres",
                        "password": "root1"
                    }
                ],
                "java.jdt.ls.java.home": "/usr/local/openjdk-21",
                "java.configuration.updateBuildConfiguration": "automatic",
                "java.format.settings.url": "https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-java-google-style.xml",
                "java.format.settings.profile": "GoogleStyle",
                "editor.formatOnSave": true,
                "java.compile.nullAnalysis.mode": "automatic"
            }
        }
    },
    "forwardPorts": [
        8080,
        5432
    ],
    "remoteUser": "vscode",
    "mounts": [
        "source=${localWorkspaceFolder}/.m2,target=/home/vscode/.m2,type=bind,consistency=cached",
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    "remoteEnv": {
        "TESTCONTAINERS_HOST_OVERRIDE": "host.docker.internal",
        "DOCKER-HOST": "unix:///var/run/docker.sock",
        "TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE": "/var/run/docker.sock"
    },
    "postCreateCommand": "sudo chmod 666 /var/run/docker.sock"
}