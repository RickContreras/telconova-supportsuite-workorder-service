spring:
  application:
    name: workoder-service

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

  #jpa:
    #database-platform: org.hibernate.dialect.PostgreSQLDialect
    #hibernate:
    #  ddl-auto: create-drop
    # show-sql: true # Descomentar para mostrar las consultas SQL generadas
    # properties:
    #   hibernate.format_sql: true # Descomentar para formatear las consultas SQL
  
  security:
    user:
      name: ${ADMIN_USER:admin}
      password: ${ADMIN_PASSWORD}
      roles: ADMIN
  
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml

  graphql:
    servlet:
      enabled: true
      mapping: /graphql
    graphiql:
      enabled: true
      path: /graphiql
    schema:
      locations: classpath:graphql/
    websocket:
      path: /graphql
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,OPTIONS
      allowed-headers: "*"

server:
  port: ${PORT:8080}
  forward-headers-strategy: framework  # Importante para proxies
  use-forward-headers: true            # Para reconocer headers X-Forwarded-*

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.graphql: DEBUG

swagger:
  production-server-url: ${SWAGGER_PRODUCTION_SERVER_URL}
  staging-server-url: https://staging-api.example.com

management: 
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,prometheus,metrics
      cors:
        allowed-origins: "*"
        allowed-methods: GET
        
  endpoint:
    health:
      show-details: when-authorized
      group:
        readiness:
          include: readinessState,db
        liveness:
          include: livenessState,diskSpace
      probes:
        enabled: true
      rabbit:
        enabled: false
      redis:
        enabled: false
    prometheus:
      enabled: true
      access: read-only  
    metrics:
      enabled: true
      access: read-only  
      
  metrics:
    tags:
      application: workoder-service
      service: workoder-service
      environment: ${spring.profiles.active:default}
      version: ${info.app.version:1.0.0} 
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
        "[workorder.processing.time]": true
      slo:
        "[http.server.requests]": 50ms,100ms,200ms,500ms,1s,2s
        "[workorder.processing.time]": 100ms,500ms,1s    
      percentiles:
        "[http.server.requests]": 0.5,0.95,0.99
        "[workorder.processing.time]": 0.5,0.9,0.95,0.99
    enable:
      jvm: true
      process: true
      system: true
      tomcat: true
      jdbc: true
      logback: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 30s
        descriptions: true
  info:
    java:
      enabled: true
    env:
      enabled: true
    git:
      mode: simple
    build:
      enabled: true
    os:
      enabled: true